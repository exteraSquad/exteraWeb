{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Utils/Game.js","Components/Actions.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/IDIcon.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Assets/Icons/ExteraV.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Assets/logo.png","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","edge","FormHelperText","code","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","openGameInBrowser","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","window","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","newWindow","opener","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","isExtera","isChatExtera","getChatTitle","ExteraV","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","showNumber","phone","innerHTML","onTileSelect","showStatus","big","showTitle","showId","showNumberText","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","migratedChatId","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","CacheManager","removeItem","clear","CacheStore","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","iam","phone_number","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","maxHeight","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","handleTracker","href","handleGithub","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","logo","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","POLL_OPTION_LENGTH","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","KeyboardButton","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","withMessage","MessageComponent","Consumer","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","unreadCount","getChatUnreadCount","Badge","badgeContent","overlap","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.15bbccb3.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        if (errorMessage === 'PASSWORD_HASH_INVALID') {\n            this.setState({ error: { code: 'InvalidPassword' } });\n            return\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender_id } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getVideoTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M2.873 11.297V4.142H1.699L0 5.379v1.137l1.64-1.18h.06v5.961h1.174Zm3.213-5.09v-.063c0-.618.44-1.169 1.196-1.169.676 0 1.174.44 1.174 1.106 0 .624-.42 1.101-.807 1.526L4.99 10.553v.744h4.78v-.99H6.643v-.069L8.41 8.252c.65-.724 1.237-1.332 1.237-2.27C9.646 4.849 8.723 4 7.308 4c-1.573 0-2.36 1.064-2.36 2.15v.057h1.138Zm6.559 1.883h.786c.823 0 1.374.481 1.379 1.179.01.707-.55 1.216-1.421 1.21-.77-.005-1.326-.419-1.379-.953h-1.095c.042 1.053.938 1.918 2.464 1.918 1.478 0 2.642-.839 2.62-2.144-.02-1.143-.922-1.651-1.551-1.714v-.063c.535-.09 1.347-.66 1.326-1.678-.026-1.053-.933-1.855-2.359-1.845-1.5.005-2.317.88-2.348 1.898h1.116c.032-.498.498-.944 1.206-.944.703 0 1.206.435 1.206 1.07.005.64-.504 1.106-1.2 1.106h-.75v.96Z\"/>,\n    'IDIcon'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","import React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M16.9111,22.4112C18.3337,18.2655 20.5744,11.6869 21.7181,8.0757C21.9877,7.2247 21.9454,6.317 21.3105,5.7242C20.689,5.1438 19.7834,5.1356 18.9482,5.4113L4.9006,10.048C3.9411,10.3647 3.5609,11.2824 3.569,12.0522C3.5771,12.8197 3.9666,13.7134 4.8593,14.0806C6.595,14.7945 8.4823,15.8148 9.8043,17.1836C11.1988,18.6274 12.2492,20.6444 12.9776,22.4314C13.3338,23.3054 14.1926,23.7017 14.9487,23.7127C15.7086,23.7237 16.5916,23.3424 16.9111,22.4112Z\" />,\n    'ExteraV'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport ExteraV from '../../Assets/Icons/ExteraV';\nimport { getChatTitle, isChatVerified, isChatExtera } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const isExtera = isChatExtera(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n                {isExtera && <ExteraV className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\nimport { withTranslation } from 'react-i18next';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId),\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    showNumber = () => {\n        const { phone } = this.props;\n        document.getElementById('number').innerHTML = `+${phone}`\n    }\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle, showId, phone, showNumberText } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showId && (\n                                <div className='tile-second-row'>\n                                    ID: {chatId}\n                                </div>\n                            )}\n                            {phone && (\n                                <div className={classNames('dialog-status', { 'dialog-status-accent': false })} id='number'>\n                                    <a onClick={this.showNumber}>{showNumberText}</a>\n                                </div>\n                            )}\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport IDIcon from '../../Assets/Icons/IDIcon';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\nimport FingerprintRoundedIcon from '@material-ui/icons/FingerprintRounded';\n\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                \n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {chatId && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <FingerprintRoundedIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={chatId}\n                                            secondary={isPrivateChat(chatId) ? 'ID' : 'ID'}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_id } = last_message;\n        if (sender_id.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId, t);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_id } = last_message;\n                switch (sender_id['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender_id.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender_id.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport Check from '../../Assets/Icons/Check';\nimport Delete from '../../Assets/Icons/Delete';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map((x) => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>\n                    ))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        return;\n\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: 300\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_id.user_id && chatSearch ? (\n                <UserTile userId={sender_id.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_id.user_id) {\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender_id } = message;\n                if (sender_id && sender_id.user_id) {\n                    users.set(sender_id.user_id, sender_id.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_id.user_id) {\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport Delete from '../../../Assets/Icons/Delete';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\nimport UserStore from '../../../Stores/UserStore';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        let iam = UserStore.get(chatId)\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                            showId={true}\n                            phone={iam.phone_number}\n                            showNumberText={t('ShowNumber')}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('ExteraSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label={t('SystemDefault')} />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label={t('Light')} />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label={t('Dark')} />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label={t('Red')}\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label={t('Orange')}\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label={t('Amber')}\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label={t('Green')}\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label={t('Blue')}\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label={t('Indigo')}\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label={t('DeepPurple')}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","export default __webpack_public_path__ + \"static/media/logo.082ee04b.png\";","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\nimport '../../Tile/Chat.css';\nimport '../../Tile/ChatTile.css';\nimport ExteraV from '../../../Assets/Icons/ExteraV';\nimport classNames from 'classnames';\nimport Check from '../../../Assets/Icons/Check';\nimport Delete from '../../../Assets/Icons/Delete';\nimport logo from '../../../Assets/logo.png'\nimport packageJson from '../../../../package.json'\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n    handleTracker = () => {\n        let a = document.createElement('a');\n        a.target=\"_blank\";\n        a.href='https://github.com/exterasquad/exteraweb/issues';\n        a.click();\n    };\n\n    handleGithub = () => {\n\n        let a = document.createElement('a');\n        a.target=\"_blank\";\n        a.href='https://github.com/exterasquad/exteraweb';\n        a.click();\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ExteraSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <div className={classNames('chat', { 'chat-big': true })}>\n                            <div className='chat-wrapper'>\n                                    <div\n                                    className={classNames(\n                                        'chat-tile',\n                                        { 'tile-big': true }\n                                    )}\n                                    style={null}>\n                                        <img className='tile-photo' src={logo} />\n                                    </div>\n                                    <div className='chat-inner-wrapper'>\n                                        <div className='tile-first-row'>\n                                            <div className='dialog-title'>\n                                                <span className='dialog-title-span'>exteraWeb | v{packageJson.version}</span>\n                                                \n                                            </div>\n                                        </div>\n                                        <div className='tile-second-row'>\n                                            {t('exteraInfo')}\n                                        </div>\n                                    </div>\n                            </div>\n                        </div>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleGithub}>\n                            <ListItemIcon>\n                                <Delete />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Source')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleTracker}>\n                            <ListItemIcon>\n                                <Check />\n                            </ListItemIcon>\n                            <ListItemText primary={t('BugTracker')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true, t);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(HeaderChatSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { isBasicGroup } from '../../Utils/BasicGroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        let canCopyPublicMessageLink = false;\n        if(chat.type['@type'] == 'chatTypeSupergroup') {\n            canCopyPublicMessageLink = true\n        }\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        try {\n            if (showTail) {\n                if (isMeChat(chatId) && forward_info) {\n                    switch (forward_info.origin['@type']) {\n                        case 'messageForwardOriginHiddenUser': {\n                            tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                            break;\n                        }\n                        case 'messageForwardOriginUser': {\n                            tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                            break;\n                        }\n                        case 'messageForwardOriginChannel': {\n                            tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                            break;\n                        }\n                    }\n                } else if (isPrivate) {\n                    tile = <EmptyTile small />\n                } else if (isChannel) {\n                    tile = <EmptyTile small />\n                } else if (is_outgoing) {\n                    tile = <EmptyTile small />\n                } else if (sender.user_id) {\n                    tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n                } else {\n                    tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n                }\n            }\n        } catch(e) {\n            tile = <EmptyTile small />\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender_id, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, via_bot_user_id } = message;\n                let userId = sender_id.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\nimport Badge from '@material-ui/core/Badge';\nimport ChatStore from '../../Stores/ChatStore';\nimport { getChatUnreadCount } from '../../Utils/Chat';\n\nclass ScrollDownButton extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            chatId,\n            chatList\n        } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n  \n    onUpdate = update => {\n        const { chatId } = this.props;\n  \n        if (update.chat_id !== chatId) return;\n  \n        this.forceUpdate();\n    };\n\n\n    render() {\n        const { onClick } = this.props;\n        const { chatId } = this.props;\n\n        const unreadCount = getChatUnreadCount(chatId);\n\n        return (\n            <div className='scroll-down-button'>\n                <Badge badgeContent={unreadCount || 0} color=\"primary\" overlap=\"circle\">\n                    <IconButton disableRipple={true} onMouseDown={onClick}>\n                      <ArrowDownwardIcon />\n                    </IconButton>\n                </Badge>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender_id, prevMessage.sender_id) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} chatId={chatId}/>\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender_id } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender_id} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}